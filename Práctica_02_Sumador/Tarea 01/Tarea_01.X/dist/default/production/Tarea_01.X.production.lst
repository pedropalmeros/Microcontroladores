

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 24 19:43:06 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12   000000                     
    13                           ; Generated 23/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTAbits	set	3968
    48   000000                     _TRISAbits	set	3986
    49   000000                     _ADCON1	set	4033
    50   000000                     _TRISD	set	3989
    51   000000                     _LATD	set	3980
    52                           
    53                           ; #config settings
    54                           
    55                           	psect	cinit
    56   007F18                     __pcinit:
    57                           	callstack 0
    58   007F18                     start_initialization:
    59                           	callstack 0
    60   007F18                     __initialization:
    61                           	callstack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (2 bytes)
    64   007F18  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    65   007F1A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    66   007F1C                     end_of_initialization:
    67                           	callstack 0
    68   007F1C                     __end_of__initialization:
    69                           	callstack 0
    70   007F1C  0100               	movlb	0
    71   007F1E  EF91  F03F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	bssCOMRAM
    74   000001                     __pbssCOMRAM:
    75                           	callstack 0
    76   000001                     _count:
    77                           	callstack 0
    78   000001                     	ds	2
    79                           
    80                           	psect	cstackCOMRAM
    81   000003                     __pcstackCOMRAM:
    82                           	callstack 0
    83   000003                     ??_main:
    84                           
    85                           ; 1 bytes @ 0x0
    86   000003                     	ds	2
    87                           
    88 ;;
    89 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    90 ;;
    91 ;; *************** function _main *****************
    92 ;; Defined at:
    93 ;;		line 26 in file "main.c"
    94 ;; Parameters:    Size  Location     Type
    95 ;;		None
    96 ;; Auto vars:     Size  Location     Type
    97 ;;		None
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, status,2, status,0
   102 ;; Tracked objects:
   103 ;;		On entry : 0/0
   104 ;;		On exit  : 0/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   107 ;;      Params:         0       0       0       0       0       0       0       0       0
   108 ;;      Locals:         0       0       0       0       0       0       0       0       0
   109 ;;      Temps:          2       0       0       0       0       0       0       0       0
   110 ;;      Totals:         2       0       0       0       0       0       0       0       0
   111 ;;Total ram usage:        2 bytes
   112 ;; This function calls:
   113 ;;		Nothing
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120   007F22                     __ptext0:
   121                           	callstack 0
   122   007F22                     _main:
   123                           	callstack 31
   124   007F22                     
   125                           ;main.c: 27:     ADCON1 = 0B00001111;
   126   007F22  0E0F               	movlw	15
   127   007F24  6EC1               	movwf	193,c	;volatile
   128   007F26                     
   129                           ;main.c: 29:     TRISAbits.RA0 = 1;
   130   007F26  8092               	bsf	146,0,c	;volatile
   131   007F28                     
   132                           ;main.c: 30:     TRISAbits.RA1 = 1;
   133   007F28  8292               	bsf	146,1,c	;volatile
   134   007F2A                     
   135                           ;main.c: 31:     TRISAbits.RA2 = 1;
   136   007F2A  8492               	bsf	146,2,c	;volatile
   137                           
   138                           ;main.c: 33:     TRISD = 0;
   139   007F2C  0E00               	movlw	0
   140   007F2E  6E95               	movwf	149,c	;volatile
   141   007F30                     l720:
   142                           
   143                           ;main.c: 36:         if(PORTAbits.RA0 == 1){
   144   007F30  A080               	btfss	128,0,c	;volatile
   145   007F32  EF9D  F03F         	goto	u11
   146   007F36  EF9F  F03F         	goto	u10
   147   007F3A                     u11:
   148   007F3A  EFB3  F03F         	goto	l20
   149   007F3E                     u10:
   150   007F3E                     
   151                           ;main.c: 37:             count+=1;
   152   007F3E  4A01               	infsnz	_count^0,f,c
   153   007F40  2A02               	incf	(_count+1)^0,f,c
   154   007F42                     
   155                           ;main.c: 38:             _delay((unsigned long)((100)*(20000000/4000.0)));
   156   007F42  0E03               	movlw	3
   157   007F44  6E04               	movwf	(??_main+1)^0,c
   158   007F46  0E8A               	movlw	138
   159   007F48  6E03               	movwf	??_main^0,c
   160   007F4A  0E56               	movlw	86
   161   007F4C                     u97:
   162   007F4C  2EE8               	decfsz	wreg,f,c
   163   007F4E  D7FE               	bra	u97
   164   007F50  2E03               	decfsz	??_main^0,f,c
   165   007F52  D7FC               	bra	u97
   166   007F54  2E04               	decfsz	(??_main+1)^0,f,c
   167   007F56  D7FA               	bra	u97
   168   007F58                     l21:
   169   007F58  B080               	btfsc	128,0,c	;volatile
   170   007F5A  EFB1  F03F         	goto	u21
   171   007F5E  EFB3  F03F         	goto	u20
   172   007F62                     u21:
   173   007F62  EFAC  F03F         	goto	l21
   174   007F66                     u20:
   175   007F66                     l20:
   176                           
   177                           ;main.c: 42:         if(PORTAbits.RA1 == 1){
   178   007F66  A280               	btfss	128,1,c	;volatile
   179   007F68  EFB8  F03F         	goto	u31
   180   007F6C  EFBA  F03F         	goto	u30
   181   007F70                     u31:
   182   007F70  EFC4  F03F         	goto	l24
   183   007F74                     u30:
   184   007F74                     
   185                           ;main.c: 43:             count -= 1;
   186   007F74  0601               	decf	_count^0,f,c
   187   007F76  A0D8               	btfss	status,0,c
   188   007F78  0602               	decf	(_count+1)^0,f,c
   189   007F7A                     l25:
   190   007F7A  B280               	btfsc	128,1,c	;volatile
   191   007F7C  EFC2  F03F         	goto	u41
   192   007F80  EFC4  F03F         	goto	u40
   193   007F84                     u41:
   194   007F84  EFBD  F03F         	goto	l25
   195   007F88                     u40:
   196   007F88                     l24:
   197                           
   198                           ;main.c: 47:         if(PORTAbits.RA2 == 1){
   199   007F88  A480               	btfss	128,2,c	;volatile
   200   007F8A  EFC9  F03F         	goto	u51
   201   007F8E  EFCB  F03F         	goto	u50
   202   007F92                     u51:
   203   007F92  EFD6  F03F         	goto	l730
   204   007F96                     u50:
   205   007F96                     
   206                           ;main.c: 48:             count = 0;
   207   007F96  0E00               	movlw	0
   208   007F98  6E02               	movwf	(_count+1)^0,c
   209   007F9A  0E00               	movlw	0
   210   007F9C  6E01               	movwf	_count^0,c
   211   007F9E                     l29:
   212   007F9E  A480               	btfss	128,2,c	;volatile
   213   007FA0  EFD4  F03F         	goto	u61
   214   007FA4  EFD6  F03F         	goto	u60
   215   007FA8                     u61:
   216   007FA8  EFCF  F03F         	goto	l29
   217   007FAC                     u60:
   218   007FAC                     l730:
   219                           
   220                           ;main.c: 52:         if(count > 255){
   221   007FAC  BE02               	btfsc	(_count+1)^0,7,c
   222   007FAE  EFDF  F03F         	goto	u71
   223   007FB2  0402               	decf	(_count+1)^0,w,c
   224   007FB4  A0D8               	btfss	status,0,c
   225   007FB6  EFDF  F03F         	goto	u71
   226   007FBA  EFE1  F03F         	goto	u70
   227   007FBE                     u71:
   228   007FBE  EFE5  F03F         	goto	l734
   229   007FC2                     u70:
   230   007FC2                     
   231                           ;main.c: 53:             count = 0;
   232   007FC2  0E00               	movlw	0
   233   007FC4  6E02               	movwf	(_count+1)^0,c
   234   007FC6  0E00               	movlw	0
   235   007FC8  6E01               	movwf	_count^0,c
   236   007FCA                     l734:
   237                           
   238                           ;main.c: 56:         if( count < 0){
   239   007FCA  BE02               	btfsc	(_count+1)^0,7,c
   240   007FCC  EFEC  F03F         	goto	u80
   241   007FD0  EFEA  F03F         	goto	u81
   242   007FD4                     u81:
   243   007FD4  EFEF  F03F         	goto	l738
   244   007FD8                     u80:
   245   007FD8                     
   246                           ;main.c: 57:             count = 255;
   247   007FD8  0E00               	movlw	0
   248   007FDA  6E02               	movwf	(_count+1)^0,c
   249   007FDC  6801               	setf	_count^0,c
   250   007FDE                     l738:
   251                           
   252                           ;main.c: 60:         LATD = count;
   253   007FDE  C001  FF8C         	movff	_count,3980	;volatile
   254   007FE2                     
   255                           ;main.c: 61:         _delay((unsigned long)((100)*(20000000/4000.0)));
   256   007FE2  0E03               	movlw	3
   257   007FE4  6E04               	movwf	(??_main+1)^0,c
   258   007FE6  0E8A               	movlw	138
   259   007FE8  6E03               	movwf	??_main^0,c
   260   007FEA  0E56               	movlw	86
   261   007FEC                     u107:
   262   007FEC  2EE8               	decfsz	wreg,f,c
   263   007FEE  D7FE               	bra	u107
   264   007FF0  2E03               	decfsz	??_main^0,f,c
   265   007FF2  D7FC               	bra	u107
   266   007FF4  2E04               	decfsz	(??_main+1)^0,f,c
   267   007FF6  D7FA               	bra	u107
   268   007FF8  EF98  F03F         	goto	l720
   269   007FFC  EF00  F000         	goto	start
   270   008000                     __end_of_main:
   271                           	callstack 0
   272   000000                     
   273                           	psect	rparam
   274   000000                     
   275                           	psect	config
   276                           
   277                           ;Config register CONFIG1L @ 0x300000
   278                           ;	PLL Prescaler Selection bits
   279                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   280                           ;	System Clock Postscaler Selection bits
   281                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   282                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   283                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   284   300000                     	org	3145728
   285   300000  00                 	db	0
   286                           
   287                           ;Config register CONFIG1H @ 0x300001
   288                           ;	Oscillator Selection bits
   289                           ;	FOSC = HS, HS oscillator (HS)
   290                           ;	Fail-Safe Clock Monitor Enable bit
   291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   292                           ;	Internal/External Oscillator Switchover bit
   293                           ;	IESO = OFF, Oscillator Switchover mode disabled
   294   300001                     	org	3145729
   295   300001  0C                 	db	12
   296                           
   297                           ;Config register CONFIG2L @ 0x300002
   298                           ;	Power-up Timer Enable bit
   299                           ;	PWRT = OFF, PWRT disabled
   300                           ;	Brown-out Reset Enable bits
   301                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   302                           ;	Brown-out Reset Voltage bits
   303                           ;	BORV = 3, Minimum setting 2.05V
   304                           ;	USB Voltage Regulator Enable bit
   305                           ;	VREGEN = OFF, USB voltage regulator disabled
   306   300002                     	org	3145730
   307   300002  1F                 	db	31
   308                           
   309                           ;Config register CONFIG2H @ 0x300003
   310                           ;	Watchdog Timer Enable bit
   311                           ;	WDT = ON, WDT enabled
   312                           ;	Watchdog Timer Postscale Select bits
   313                           ;	WDTPS = 32768, 1:32768
   314   300003                     	org	3145731
   315   300003  1F                 	db	31
   316                           
   317                           ; Padding undefined space
   318   300004                     	org	3145732
   319   300004  FF                 	db	255
   320                           
   321                           ;Config register CONFIG3H @ 0x300005
   322                           ;	CCP2 MUX bit
   323                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   324                           ;	PORTB A/D Enable bit
   325                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   326                           ;	Low-Power Timer 1 Oscillator Enable bit
   327                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   328                           ;	MCLR Pin Enable bit
   329                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   330   300005                     	org	3145733
   331   300005  83                 	db	131
   332                           
   333                           ;Config register CONFIG4L @ 0x300006
   334                           ;	Stack Full/Underflow Reset Enable bit
   335                           ;	STVREN = ON, Stack full/underflow will cause Reset
   336                           ;	Single-Supply ICSP Enable bit
   337                           ;	LVP = ON, Single-Supply ICSP enabled
   338                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   339                           ;	ICPRT = OFF, ICPORT disabled
   340                           ;	Extended Instruction Set Enable bit
   341                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   342                           ;	Background Debugger Enable bit
   343                           ;	DEBUG = 0x1, unprogrammed default
   344   300006                     	org	3145734
   345   300006  85                 	db	133
   346                           
   347                           ; Padding undefined space
   348   300007                     	org	3145735
   349   300007  FF                 	db	255
   350                           
   351                           ;Config register CONFIG5L @ 0x300008
   352                           ;	Code Protection bit
   353                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   354                           ;	Code Protection bit
   355                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   356                           ;	Code Protection bit
   357                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   358                           ;	Code Protection bit
   359                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   360   300008                     	org	3145736
   361   300008  0F                 	db	15
   362                           
   363                           ;Config register CONFIG5H @ 0x300009
   364                           ;	Boot Block Code Protection bit
   365                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   366                           ;	Data EEPROM Code Protection bit
   367                           ;	CPD = OFF, Data EEPROM is not code-protected
   368   300009                     	org	3145737
   369   300009  C0                 	db	192
   370                           
   371                           ;Config register CONFIG6L @ 0x30000A
   372                           ;	Write Protection bit
   373                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   374                           ;	Write Protection bit
   375                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   376                           ;	Write Protection bit
   377                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   378                           ;	Write Protection bit
   379                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   380   30000A                     	org	3145738
   381   30000A  0F                 	db	15
   382                           
   383                           ;Config register CONFIG6H @ 0x30000B
   384                           ;	Configuration Register Write Protection bit
   385                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   386                           ;	Boot Block Write Protection bit
   387                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   388                           ;	Data EEPROM Write Protection bit
   389                           ;	WRTD = OFF, Data EEPROM is not write-protected
   390   30000B                     	org	3145739
   391   30000B  E0                 	db	224
   392                           
   393                           ;Config register CONFIG7L @ 0x30000C
   394                           ;	Table Read Protection bit
   395                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   396                           ;	Table Read Protection bit
   397                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   398                           ;	Table Read Protection bit
   399                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   400                           ;	Table Read Protection bit
   401                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   402   30000C                     	org	3145740
   403   30000C  0F                 	db	15
   404                           
   405                           ;Config register CONFIG7H @ 0x30000D
   406                           ;	Boot Block Table Read Protection bit
   407                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   408   30000D                     	org	3145741
   409   30000D  40                 	db	64
   410                           tosu	equ	0xFFF
   411                           tosh	equ	0xFFE
   412                           tosl	equ	0xFFD
   413                           stkptr	equ	0xFFC
   414                           pclatu	equ	0xFFB
   415                           pclath	equ	0xFFA
   416                           pcl	equ	0xFF9
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           prodh	equ	0xFF4
   422                           prodl	equ	0xFF3
   423                           indf0	equ	0xFEF
   424                           postinc0	equ	0xFEE
   425                           postdec0	equ	0xFED
   426                           preinc0	equ	0xFEC
   427                           plusw0	equ	0xFEB
   428                           fsr0h	equ	0xFEA
   429                           fsr0l	equ	0xFE9
   430                           wreg	equ	0xFE8
   431                           indf1	equ	0xFE7
   432                           postinc1	equ	0xFE6
   433                           postdec1	equ	0xFE5
   434                           preinc1	equ	0xFE4
   435                           plusw1	equ	0xFE3
   436                           fsr1h	equ	0xFE2
   437                           fsr1l	equ	0xFE1
   438                           bsr	equ	0xFE0
   439                           indf2	equ	0xFDF
   440                           postinc2	equ	0xFDE
   441                           postdec2	equ	0xFDD
   442                           preinc2	equ	0xFDC
   443                           plusw2	equ	0xFDB
   444                           fsr2h	equ	0xFDA
   445                           fsr2l	equ	0xFD9
   446                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       4       1        4.2%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRlll        20      0       0      26        0.0%
BITBIGSFRllhl        B      0       0      25        0.0%
BITBIGSFRllhh        5      0       0      24        0.0%
BITBIGSFRlhl         2      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4       3        0.0%
DATA                 0      0       4       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 24 19:43:06 2024

                     l20 7F66                       l21 7F58                       l24 7F88  
                     l25 7F7A                       l29 7F9E                       u10 7F3E  
                     u11 7F3A                       u20 7F66                       u21 7F62  
                     u30 7F74                       u31 7F70                       u40 7F88  
                     u41 7F84                       u50 7F96                       u51 7F92  
                     u60 7FAC                       u61 7FA8                       u70 7FC2  
                     u71 7FBE                       u80 7FD8                       u81 7FD4  
                     u97 7F4C                      l720 7F30                      l712 7F22  
                    l730 7FAC                      l722 7F3E                      l714 7F26  
                    l740 7FE2                      l732 7FC2                      l724 7F42  
                    l716 7F28                      l734 7FCA                      l726 7F74  
                    l718 7F2A                      l736 7FD8                      l728 7F96  
                    l738 7FDE                      u107 7FEC                      wreg 000FE8  
                   _LATD 000F8C                     _main 7F22                     start 0000  
           ___param_bank 000000                    ?_main 0003                    _TRISD 000F95  
                  _count 0001                    status 000FD8          __initialization 7F18  
           __end_of_main 8000                   ??_main 0003            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001               __accesstop 0060  
__end_of__initialization 7F1C            ___rparam_used 000001           __pcstackCOMRAM 0003  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F18  
                __ramtop 0800                  __ptext0 7F22     end_of_initialization 7F1C  
              _PORTAbits 000F80                _TRISAbits 000F92      start_initialization 7F18  
            __pbssCOMRAM 0001                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
