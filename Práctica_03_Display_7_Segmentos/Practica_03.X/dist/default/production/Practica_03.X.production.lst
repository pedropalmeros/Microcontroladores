

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 31 22:33:18 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 23/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     
    50                           	psect	idataCOMRAM
    51   007EFA                     __pidataCOMRAM:
    52                           	callstack 0
    53                           
    54                           ;initializer for _display_array
    55   007EFA  003F               	dw	63
    56   007EFC  0006               	dw	6
    57   007EFE  005B               	dw	91
    58   007F00  004F               	dw	79
    59   007F02  0066               	dw	102
    60   007F04  006D               	dw	109
    61   007F06  007C               	dw	124
    62   007F08  0047               	dw	71
    63   007F0A  007F               	dw	127
    64   007F0C  0067               	dw	103
    65   007F0E  0077               	dw	119
    66   007F10  007C               	dw	124
    67   007F12  0039               	dw	57
    68   007F14  005E               	dw	94
    69   007F16  0079               	dw	121
    70   007F18  0071               	dw	113
    71   000000                     _LATD	set	3980
    72   000000                     _TRISD	set	3989
    73   000000                     _ADCON1	set	4033
    74   000000                     _TRISEbits	set	3990
    75   000000                     _LATEbits	set	3981
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80   007F1A                     __pcinit:
    81                           	callstack 0
    82   007F1A                     start_initialization:
    83                           	callstack 0
    84   007F1A                     __initialization:
    85                           	callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (32 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89   007F1A  0EFA               	movlw	low __pidataCOMRAM
    90   007F1C  6EF6               	movwf	tblptrl,c
    91   007F1E  0E7E               	movlw	high __pidataCOMRAM
    92   007F20  6EF7               	movwf	tblptrh,c
    93   007F22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94   007F24  6EF8               	movwf	tblptru,c
    95   007F26  EE00  F001         	lfsr	0,__pdataCOMRAM
    96   007F2A  EE10 F020          	lfsr	1,32
    97   007F2E                     copy_data0:
    98   007F2E  0009               	tblrd		*+
    99   007F30  CFF5 FFEE          	movff	tablat,postinc0
   100   007F34  50E5               	movf	postdec1,w,c
   101   007F36  50E1               	movf	fsr1l,w,c
   102   007F38  E1FA               	bnz	copy_data0
   103                           
   104                           ; Clear objects allocated to COMRAM (2 bytes)
   105   007F3A  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106   007F3C  6A26               	clrf	__pbssCOMRAM& (0+255),c
   107   007F3E                     end_of_initialization:
   108                           	callstack 0
   109   007F3E                     __end_of__initialization:
   110                           	callstack 0
   111   007F3E  0100               	movlb	0
   112   007F40  EFA2  F03F         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMRAM
   115   000026                     __pbssCOMRAM:
   116                           	callstack 0
   117   000026                     _value:
   118                           	callstack 0
   119   000026                     	ds	2
   120                           
   121                           	psect	dataCOMRAM
   122   000001                     __pdataCOMRAM:
   123                           	callstack 0
   124   000001                     _display_array:
   125                           	callstack 0
   126   000001                     	ds	32
   127                           
   128                           	psect	cstackCOMRAM
   129   000021                     __pcstackCOMRAM:
   130                           	callstack 0
   131   000021                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x0
   134   000021                     	ds	1
   135   000022                     main@units:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x1
   139   000022                     	ds	2
   140   000024                     main@tens:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x3
   144   000024                     	ds	2
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 31 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  tens            2    3[COMRAM] int 
   156 ;;  units           2    1[COMRAM] int 
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   166 ;;      Params:         0       0       0       0       0       0       0       0       0
   167 ;;      Locals:         4       0       0       0       0       0       0       0       0
   168 ;;      Temps:          1       0       0       0       0       0       0       0       0
   169 ;;      Totals:         5       0       0       0       0       0       0       0       0
   170 ;;Total ram usage:        5 bytes
   171 ;; This function calls:
   172 ;;		Nothing
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179   007F44                     __ptext0:
   180                           	callstack 0
   181   007F44                     _main:
   182                           	callstack 31
   183   007F44                     
   184                           ;main.c: 34:     int tens = 0;
   185   007F44  0E00               	movlw	0
   186   007F46  6E25               	movwf	(main@tens+1)^0,c
   187   007F48  0E00               	movlw	0
   188   007F4A  6E24               	movwf	main@tens^0,c
   189                           
   190                           ;main.c: 35:     ADCON1 = 0B00001111;
   191   007F4C  0E0F               	movlw	15
   192   007F4E  6EC1               	movwf	193,c	;volatile
   193                           
   194                           ;main.c: 37:     TRISD = 0;
   195   007F50  0E00               	movlw	0
   196   007F52  6E95               	movwf	149,c	;volatile
   197   007F54                     
   198                           ;main.c: 39:     TRISEbits.RE0 = 0;
   199   007F54  9096               	bcf	150,0,c	;volatile
   200   007F56                     
   201                           ;main.c: 40:     TRISEbits.RE1 = 0;
   202   007F56  9296               	bcf	150,1,c	;volatile
   203                           
   204                           ;main.c: 43:     for(tens = 0; tens <= 9; tens++){
   205   007F58  0E00               	movlw	0
   206   007F5A  6E25               	movwf	(main@tens+1)^0,c
   207   007F5C  0E00               	movlw	0
   208   007F5E  6E24               	movwf	main@tens^0,c
   209   007F60                     l711:
   210                           
   211                           ;main.c: 45:         for(units = 0; units <=9; units++){
   212   007F60  0E00               	movlw	0
   213   007F62  6E23               	movwf	(main@units+1)^0,c
   214   007F64  0E00               	movlw	0
   215   007F66  6E22               	movwf	main@units^0,c
   216   007F68                     l717:
   217                           
   218                           ;main.c: 46:             LATD = display_array[units];
   219   007F68  90D8               	bcf	status,0,c
   220   007F6A  3422               	rlcf	main@units^0,w,c
   221   007F6C  6ED9               	movwf	fsr2l,c
   222   007F6E  3423               	rlcf	(main@units+1)^0,w,c
   223   007F70  6EDA               	movwf	fsr2h,c
   224   007F72  0E01               	movlw	low _display_array
   225   007F74  26D9               	addwf	fsr2l,f,c
   226   007F76  0E00               	movlw	high _display_array
   227   007F78  22DA               	addwfc	fsr2h,f,c
   228   007F7A  50DF               	movf	indf2,w,c
   229   007F7C  6E8C               	movwf	140,c	;volatile
   230   007F7E                     
   231                           ;main.c: 47:             LATEbits.LATE0 = 1;
   232   007F7E  808D               	bsf	141,0,c	;volatile
   233   007F80                     
   234                           ;main.c: 48:             LATEbits.LATE1 = 0;
   235   007F80  928D               	bcf	141,1,c	;volatile
   236   007F82                     
   237                           ;main.c: 50:             _delay((unsigned long)((10)*(20000000/4000.0)));
   238   007F82  0E41               	movlw	65
   239   007F84  6E21               	movwf	??_main^0,c
   240   007F86  0EEE               	movlw	238
   241   007F88                     u37:
   242   007F88  2EE8               	decfsz	wreg,f,c
   243   007F8A  D7FE               	bra	u37
   244   007F8C  2E21               	decfsz	??_main^0,f,c
   245   007F8E  D7FC               	bra	u37
   246   007F90  D000               	nop2	
   247   007F92                     
   248                           ;main.c: 51:             LATD = display_array[tens];
   249   007F92  90D8               	bcf	status,0,c
   250   007F94  3424               	rlcf	main@tens^0,w,c
   251   007F96  6ED9               	movwf	fsr2l,c
   252   007F98  3425               	rlcf	(main@tens+1)^0,w,c
   253   007F9A  6EDA               	movwf	fsr2h,c
   254   007F9C  0E01               	movlw	low _display_array
   255   007F9E  26D9               	addwf	fsr2l,f,c
   256   007FA0  0E00               	movlw	high _display_array
   257   007FA2  22DA               	addwfc	fsr2h,f,c
   258   007FA4  50DF               	movf	indf2,w,c
   259   007FA6  6E8C               	movwf	140,c	;volatile
   260   007FA8                     
   261                           ;main.c: 52:             LATEbits.LATE0 = 0;
   262   007FA8  908D               	bcf	141,0,c	;volatile
   263   007FAA                     
   264                           ;main.c: 53:             LATEbits.LATE1 = 1;
   265   007FAA  828D               	bsf	141,1,c	;volatile
   266                           
   267                           ;main.c: 54:             _delay((unsigned long)((10)*(20000000/4000.0)));
   268   007FAC  0E41               	movlw	65
   269   007FAE  6E21               	movwf	??_main^0,c
   270   007FB0  0EEE               	movlw	238
   271   007FB2                     u47:
   272   007FB2  2EE8               	decfsz	wreg,f,c
   273   007FB4  D7FE               	bra	u47
   274   007FB6  2E21               	decfsz	??_main^0,f,c
   275   007FB8  D7FC               	bra	u47
   276   007FBA  D000               	nop2	
   277   007FBC                     
   278                           ;main.c: 55:         }
   279   007FBC  4A22               	infsnz	main@units^0,f,c
   280   007FBE  2A23               	incf	(main@units+1)^0,f,c
   281   007FC0  BE23               	btfsc	(main@units+1)^0,7,c
   282   007FC2  EFEC  F03F         	goto	u11
   283   007FC6  5023               	movf	(main@units+1)^0,w,c
   284   007FC8  E109               	bnz	u10
   285   007FCA  0E0A               	movlw	10
   286   007FCC  5C22               	subwf	main@units^0,w,c
   287   007FCE  A0D8               	btfss	status,0,c
   288   007FD0  EFEC  F03F         	goto	u11
   289   007FD4  EFEE  F03F         	goto	u10
   290   007FD8                     u11:
   291   007FD8  EFB4  F03F         	goto	l717
   292   007FDC                     u10:
   293   007FDC                     
   294                           ;main.c: 56:     }
   295   007FDC  4A24               	infsnz	main@tens^0,f,c
   296   007FDE  2A25               	incf	(main@tens+1)^0,f,c
   297   007FE0  BE25               	btfsc	(main@tens+1)^0,7,c
   298   007FE2  EFFC  F03F         	goto	u21
   299   007FE6  5025               	movf	(main@tens+1)^0,w,c
   300   007FE8  E109               	bnz	u20
   301   007FEA  0E0A               	movlw	10
   302   007FEC  5C24               	subwf	main@tens^0,w,c
   303   007FEE  A0D8               	btfss	status,0,c
   304   007FF0  EFFC  F03F         	goto	u21
   305   007FF4  EFFE  F03F         	goto	u20
   306   007FF8                     u21:
   307   007FF8  EFB0  F03F         	goto	l711
   308   007FFC                     u20:
   309   007FFC  EF00  F000         	goto	start
   310   008000                     __end_of_main:
   311                           	callstack 0
   312   000000                     
   313                           	psect	rparam
   314   000000                     
   315                           	psect	config
   316                           
   317                           ;Config register CONFIG1L @ 0x300000
   318                           ;	PLL Prescaler Selection bits
   319                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   320                           ;	System Clock Postscaler Selection bits
   321                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   322                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   323                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   324   300000                     	org	3145728
   325   300000  00                 	db	0
   326                           
   327                           ;Config register CONFIG1H @ 0x300001
   328                           ;	Oscillator Selection bits
   329                           ;	FOSC = HS, HS oscillator (HS)
   330                           ;	Fail-Safe Clock Monitor Enable bit
   331                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   332                           ;	Internal/External Oscillator Switchover bit
   333                           ;	IESO = OFF, Oscillator Switchover mode disabled
   334   300001                     	org	3145729
   335   300001  0C                 	db	12
   336                           
   337                           ;Config register CONFIG2L @ 0x300002
   338                           ;	Power-up Timer Enable bit
   339                           ;	PWRT = OFF, PWRT disabled
   340                           ;	Brown-out Reset Enable bits
   341                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   342                           ;	Brown-out Reset Voltage bits
   343                           ;	BORV = 3, Minimum setting 2.05V
   344                           ;	USB Voltage Regulator Enable bit
   345                           ;	VREGEN = OFF, USB voltage regulator disabled
   346   300002                     	org	3145730
   347   300002  1F                 	db	31
   348                           
   349                           ;Config register CONFIG2H @ 0x300003
   350                           ;	Watchdog Timer Enable bit
   351                           ;	WDT = ON, WDT enabled
   352                           ;	Watchdog Timer Postscale Select bits
   353                           ;	WDTPS = 32768, 1:32768
   354   300003                     	org	3145731
   355   300003  1F                 	db	31
   356                           
   357                           ; Padding undefined space
   358   300004                     	org	3145732
   359   300004  FF                 	db	255
   360                           
   361                           ;Config register CONFIG3H @ 0x300005
   362                           ;	CCP2 MUX bit
   363                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   364                           ;	PORTB A/D Enable bit
   365                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   366                           ;	Low-Power Timer 1 Oscillator Enable bit
   367                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   368                           ;	MCLR Pin Enable bit
   369                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   370   300005                     	org	3145733
   371   300005  83                 	db	131
   372                           
   373                           ;Config register CONFIG4L @ 0x300006
   374                           ;	Stack Full/Underflow Reset Enable bit
   375                           ;	STVREN = ON, Stack full/underflow will cause Reset
   376                           ;	Single-Supply ICSP Enable bit
   377                           ;	LVP = ON, Single-Supply ICSP enabled
   378                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   379                           ;	ICPRT = OFF, ICPORT disabled
   380                           ;	Extended Instruction Set Enable bit
   381                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   382                           ;	Background Debugger Enable bit
   383                           ;	DEBUG = 0x1, unprogrammed default
   384   300006                     	org	3145734
   385   300006  85                 	db	133
   386                           
   387                           ; Padding undefined space
   388   300007                     	org	3145735
   389   300007  FF                 	db	255
   390                           
   391                           ;Config register CONFIG5L @ 0x300008
   392                           ;	Code Protection bit
   393                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   394                           ;	Code Protection bit
   395                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   396                           ;	Code Protection bit
   397                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   398                           ;	Code Protection bit
   399                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   400   300008                     	org	3145736
   401   300008  0F                 	db	15
   402                           
   403                           ;Config register CONFIG5H @ 0x300009
   404                           ;	Boot Block Code Protection bit
   405                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   406                           ;	Data EEPROM Code Protection bit
   407                           ;	CPD = OFF, Data EEPROM is not code-protected
   408   300009                     	org	3145737
   409   300009  C0                 	db	192
   410                           
   411                           ;Config register CONFIG6L @ 0x30000A
   412                           ;	Write Protection bit
   413                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   414                           ;	Write Protection bit
   415                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   416                           ;	Write Protection bit
   417                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   418                           ;	Write Protection bit
   419                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   420   30000A                     	org	3145738
   421   30000A  0F                 	db	15
   422                           
   423                           ;Config register CONFIG6H @ 0x30000B
   424                           ;	Configuration Register Write Protection bit
   425                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   426                           ;	Boot Block Write Protection bit
   427                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   428                           ;	Data EEPROM Write Protection bit
   429                           ;	WRTD = OFF, Data EEPROM is not write-protected
   430   30000B                     	org	3145739
   431   30000B  E0                 	db	224
   432                           
   433                           ;Config register CONFIG7L @ 0x30000C
   434                           ;	Table Read Protection bit
   435                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   436                           ;	Table Read Protection bit
   437                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   438                           ;	Table Read Protection bit
   439                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   440                           ;	Table Read Protection bit
   441                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   442   30000C                     	org	3145740
   443   30000C  0F                 	db	15
   444                           
   445                           ;Config register CONFIG7H @ 0x30000D
   446                           ;	Boot Block Table Read Protection bit
   447                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   448   30000D                     	org	3145741
   449   30000D  40                 	db	64
   450                           tosu	equ	0xFFF
   451                           tosh	equ	0xFFE
   452                           tosl	equ	0xFFD
   453                           stkptr	equ	0xFFC
   454                           pclatu	equ	0xFFB
   455                           pclath	equ	0xFFA
   456                           pcl	equ	0xFF9
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           prodh	equ	0xFF4
   462                           prodl	equ	0xFF3
   463                           indf0	equ	0xFEF
   464                           postinc0	equ	0xFEE
   465                           postdec0	equ	0xFED
   466                           preinc0	equ	0xFEC
   467                           plusw0	equ	0xFEB
   468                           fsr0h	equ	0xFEA
   469                           fsr0l	equ	0xFE9
   470                           wreg	equ	0xFE8
   471                           indf1	equ	0xFE7
   472                           postinc1	equ	0xFE6
   473                           postdec1	equ	0xFE5
   474                           preinc1	equ	0xFE4
   475                           plusw1	equ	0xFE3
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           bsr	equ	0xFE0
   479                           indf2	equ	0xFDF
   480                           postinc2	equ	0xFDE
   481                           postdec2	equ	0xFDD
   482                           preinc2	equ	0xFDC
   483                           plusw2	equ	0xFDB
   484                           fsr2h	equ	0xFDA
   485                           fsr2l	equ	0xFD9
   486                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5      27       1       41.1%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2C      0       0      23        0.0%
BITBIGSFRlh         2A      0       0      21        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      24        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 31 22:33:18 2024

                     l25 7FFC                       u10 7FDC                       u11 7FD8  
                     u20 7FFC                       u21 7FF8                       u37 7F88  
                     u47 7FB2                      l701 7F44                      l711 7F60  
                    l703 7F54                      l721 7F80                      l705 7F56  
                    l731 7FBC                      l723 7F82                      l733 7FDC  
                    l725 7F92                      l717 7F68                      l735 7FE0  
                    l727 7FA8                      l719 7F7E                      l729 7FAA  
                    wreg 000FE8                     _LATD 000F8C                     _main 7F44  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 0021                    _TRISD 000F95                    _value 0026  
                  tablat 000FF5                    status 000FD8          __initialization 7F1A  
           __end_of_main 8000                   ??_main 0021            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F3E            ___rparam_used 000001  
         __pcstackCOMRAM 0021                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F1A                  __ramtop 0800                  __ptext0 7F44  
   end_of_initialization 7F3E                  postdec1 000FE5                  postinc0 000FEE  
              _TRISEbits 000F96            __pidataCOMRAM 7EFA      start_initialization 7F1A  
            __pbssCOMRAM 0026                 _LATEbits 000F8D                main@units 0022  
              copy_data0 7F2E                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000                 main@tens 0024            _display_array 0001  
