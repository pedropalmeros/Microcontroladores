

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 01 08:42:41 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13   000000                     
    14                           ; Generated 23/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     
    49                           	psect	idataCOMRAM
    50   007F3A                     __pidataCOMRAM:
    51                           	callstack 0
    52                           
    53                           ;initializer for _display_array
    54   007F3A  003F               	dw	63
    55   007F3C  0006               	dw	6
    56   007F3E  005B               	dw	91
    57   007F40  004F               	dw	79
    58   007F42  0066               	dw	102
    59   007F44  006D               	dw	109
    60   007F46  007D               	dw	125
    61   007F48  0007               	dw	7
    62   007F4A  007F               	dw	127
    63   007F4C  0067               	dw	103
    64   007F4E  0077               	dw	119
    65   007F50  007C               	dw	124
    66   007F52  0039               	dw	57
    67   007F54  005E               	dw	94
    68   007F56  0079               	dw	121
    69   007F58  0071               	dw	113
    70   000000                     _LATD	set	3980
    71   000000                     _TRISD	set	3989
    72   000000                     _ADCON1	set	4033
    73   000000                     _TRISEbits	set	3990
    74   000000                     _LATEbits	set	3981
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79   007F5A                     __pcinit:
    80                           	callstack 0
    81   007F5A                     start_initialization:
    82                           	callstack 0
    83   007F5A                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (32 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88   007F5A  0E3A               	movlw	low __pidataCOMRAM
    89   007F5C  6EF6               	movwf	tblptrl,c
    90   007F5E  0E7F               	movlw	high __pidataCOMRAM
    91   007F60  6EF7               	movwf	tblptrh,c
    92   007F62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93   007F64  6EF8               	movwf	tblptru,c
    94   007F66  EE00  F001         	lfsr	0,__pdataCOMRAM
    95   007F6A  EE10 F020          	lfsr	1,32
    96   007F6E                     copy_data0:
    97   007F6E  0009               	tblrd		*+
    98   007F70  CFF5 FFEE          	movff	tablat,postinc0
    99   007F74  50E5               	movf	postdec1,w,c
   100   007F76  50E1               	movf	fsr1l,w,c
   101   007F78  E1FA               	bnz	copy_data0
   102   007F7A                     end_of_initialization:
   103                           	callstack 0
   104   007F7A                     __end_of__initialization:
   105                           	callstack 0
   106   007F7A  0100               	movlb	0
   107   007F7C  EFC0  F03F         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	dataCOMRAM
   110   000001                     __pdataCOMRAM:
   111                           	callstack 0
   112   000001                     _display_array:
   113                           	callstack 0
   114   000001                     	ds	32
   115                           
   116                           	psect	cstackCOMRAM
   117   000021                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000021                     ??_main:
   120                           
   121                           ; 1 bytes @ 0x0
   122   000021                     	ds	2
   123   000023                     main@i:
   124                           	callstack 0
   125                           
   126                           ; 2 bytes @ 0x2
   127   000023                     	ds	2
   128                           
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 23 in file "main.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;  i               2    2[COMRAM] int 
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   143 ;; Tracked objects:
   144 ;;		On entry : 0/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   148 ;;      Params:         0       0       0       0       0       0       0       0       0
   149 ;;      Locals:         2       0       0       0       0       0       0       0       0
   150 ;;      Temps:          2       0       0       0       0       0       0       0       0
   151 ;;      Totals:         4       0       0       0       0       0       0       0       0
   152 ;;Total ram usage:        4 bytes
   153 ;; This function calls:
   154 ;;		Nothing
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161   007F80                     __ptext0:
   162                           	callstack 0
   163   007F80                     _main:
   164                           	callstack 31
   165   007F80                     
   166                           ;main.c: 25:     ADCON1 = 0B00001111;
   167   007F80  0E0F               	movlw	15
   168   007F82  6EC1               	movwf	193,c	;volatile
   169                           
   170                           ;main.c: 27:     TRISD = 0;
   171   007F84  0E00               	movlw	0
   172   007F86  6E95               	movwf	149,c	;volatile
   173   007F88                     
   174                           ;main.c: 28:     TRISEbits.RE0 = 0;
   175   007F88  9096               	bcf	150,0,c	;volatile
   176   007F8A                     
   177                           ;main.c: 29:     TRISEbits.RE1 = 0;
   178   007F8A  9296               	bcf	150,1,c	;volatile
   179                           
   180                           ;main.c: 31:     for(int i = 0; i <= 15; i++){
   181   007F8C  0E00               	movlw	0
   182   007F8E  6E24               	movwf	(main@i+1)^0,c
   183   007F90  0E00               	movlw	0
   184   007F92  6E23               	movwf	main@i^0,c
   185   007F94                     l709:
   186                           
   187                           ;main.c: 32:         LATD = display_array[i];
   188   007F94  90D8               	bcf	status,0,c
   189   007F96  3423               	rlcf	main@i^0,w,c
   190   007F98  6ED9               	movwf	fsr2l,c
   191   007F9A  3424               	rlcf	(main@i+1)^0,w,c
   192   007F9C  6EDA               	movwf	fsr2h,c
   193   007F9E  0E01               	movlw	low _display_array
   194   007FA0  26D9               	addwf	fsr2l,f,c
   195   007FA2  0E00               	movlw	high _display_array
   196   007FA4  22DA               	addwfc	fsr2h,f,c
   197   007FA6  50DF               	movf	indf2,w,c
   198   007FA8  6E8C               	movwf	140,c	;volatile
   199   007FAA                     
   200                           ;main.c: 33:         if (i%2 == 0){
   201   007FAA  B023               	btfsc	main@i^0,0,c
   202   007FAC  EFDA  F03F         	goto	u11
   203   007FB0  EFDC  F03F         	goto	u10
   204   007FB4                     u11:
   205   007FB4  EFE0  F03F         	goto	l21
   206   007FB8                     u10:
   207   007FB8                     
   208                           ;main.c: 34:             LATEbits.LE0 = 0;
   209   007FB8  908D               	bcf	141,0,c	;volatile
   210                           
   211                           ;main.c: 35:             LATEbits.LE1 = 1;
   212   007FBA  828D               	bsf	141,1,c	;volatile
   213                           
   214                           ;main.c: 36:         }else{
   215   007FBC  EFE2  F03F         	goto	l715
   216   007FC0                     l21:
   217                           
   218                           ;main.c: 37:             LATEbits.LE0 = 1;
   219   007FC0  808D               	bsf	141,0,c	;volatile
   220                           
   221                           ;main.c: 38:             LATEbits.LE1 = 0;
   222   007FC2  928D               	bcf	141,1,c	;volatile
   223   007FC4                     l715:
   224                           
   225                           ;main.c: 42:         _delay((unsigned long)((500)*(20000000/4000.0)));
   226   007FC4  0E0D               	movlw	13
   227   007FC6  6E22               	movwf	(??_main+1)^0,c
   228   007FC8  0EAF               	movlw	175
   229   007FCA  6E21               	movwf	??_main^0,c
   230   007FCC  0EB6               	movlw	182
   231   007FCE                     u37:
   232   007FCE  2EE8               	decfsz	wreg,f,c
   233   007FD0  D7FE               	bra	u37
   234   007FD2  2E21               	decfsz	??_main^0,f,c
   235   007FD4  D7FC               	bra	u37
   236   007FD6  2E22               	decfsz	(??_main+1)^0,f,c
   237   007FD8  D7FA               	bra	u37
   238   007FDA  D000               	nop2	
   239   007FDC                     
   240                           ;main.c: 43:     }
   241   007FDC  4A23               	infsnz	main@i^0,f,c
   242   007FDE  2A24               	incf	(main@i+1)^0,f,c
   243   007FE0  BE24               	btfsc	(main@i+1)^0,7,c
   244   007FE2  EFFC  F03F         	goto	u21
   245   007FE6  5024               	movf	(main@i+1)^0,w,c
   246   007FE8  E109               	bnz	u20
   247   007FEA  0E10               	movlw	16
   248   007FEC  5C23               	subwf	main@i^0,w,c
   249   007FEE  A0D8               	btfss	status,0,c
   250   007FF0  EFFC  F03F         	goto	u21
   251   007FF4  EFFE  F03F         	goto	u20
   252   007FF8                     u21:
   253   007FF8  EFCA  F03F         	goto	l709
   254   007FFC                     u20:
   255   007FFC  EF00  F000         	goto	start
   256   008000                     __end_of_main:
   257                           	callstack 0
   258   000000                     
   259                           	psect	rparam
   260   000000                     
   261                           	psect	config
   262                           
   263                           ;Config register CONFIG1L @ 0x300000
   264                           ;	PLL Prescaler Selection bits
   265                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   266                           ;	System Clock Postscaler Selection bits
   267                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   268                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   269                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   270   300000                     	org	3145728
   271   300000  00                 	db	0
   272                           
   273                           ;Config register CONFIG1H @ 0x300001
   274                           ;	Oscillator Selection bits
   275                           ;	FOSC = HS, HS oscillator (HS)
   276                           ;	Fail-Safe Clock Monitor Enable bit
   277                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   278                           ;	Internal/External Oscillator Switchover bit
   279                           ;	IESO = OFF, Oscillator Switchover mode disabled
   280   300001                     	org	3145729
   281   300001  0C                 	db	12
   282                           
   283                           ;Config register CONFIG2L @ 0x300002
   284                           ;	Power-up Timer Enable bit
   285                           ;	PWRT = OFF, PWRT disabled
   286                           ;	Brown-out Reset Enable bits
   287                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   288                           ;	Brown-out Reset Voltage bits
   289                           ;	BORV = 3, Minimum setting 2.05V
   290                           ;	USB Voltage Regulator Enable bit
   291                           ;	VREGEN = OFF, USB voltage regulator disabled
   292   300002                     	org	3145730
   293   300002  1F                 	db	31
   294                           
   295                           ;Config register CONFIG2H @ 0x300003
   296                           ;	Watchdog Timer Enable bit
   297                           ;	WDT = ON, WDT enabled
   298                           ;	Watchdog Timer Postscale Select bits
   299                           ;	WDTPS = 32768, 1:32768
   300   300003                     	org	3145731
   301   300003  1F                 	db	31
   302                           
   303                           ; Padding undefined space
   304   300004                     	org	3145732
   305   300004  FF                 	db	255
   306                           
   307                           ;Config register CONFIG3H @ 0x300005
   308                           ;	CCP2 MUX bit
   309                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   310                           ;	PORTB A/D Enable bit
   311                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   312                           ;	Low-Power Timer 1 Oscillator Enable bit
   313                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   314                           ;	MCLR Pin Enable bit
   315                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   316   300005                     	org	3145733
   317   300005  83                 	db	131
   318                           
   319                           ;Config register CONFIG4L @ 0x300006
   320                           ;	Stack Full/Underflow Reset Enable bit
   321                           ;	STVREN = ON, Stack full/underflow will cause Reset
   322                           ;	Single-Supply ICSP Enable bit
   323                           ;	LVP = ON, Single-Supply ICSP enabled
   324                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   325                           ;	ICPRT = OFF, ICPORT disabled
   326                           ;	Extended Instruction Set Enable bit
   327                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   328                           ;	Background Debugger Enable bit
   329                           ;	DEBUG = 0x1, unprogrammed default
   330   300006                     	org	3145734
   331   300006  85                 	db	133
   332                           
   333                           ; Padding undefined space
   334   300007                     	org	3145735
   335   300007  FF                 	db	255
   336                           
   337                           ;Config register CONFIG5L @ 0x300008
   338                           ;	Code Protection bit
   339                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   340                           ;	Code Protection bit
   341                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   342                           ;	Code Protection bit
   343                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   344                           ;	Code Protection bit
   345                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   346   300008                     	org	3145736
   347   300008  0F                 	db	15
   348                           
   349                           ;Config register CONFIG5H @ 0x300009
   350                           ;	Boot Block Code Protection bit
   351                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   352                           ;	Data EEPROM Code Protection bit
   353                           ;	CPD = OFF, Data EEPROM is not code-protected
   354   300009                     	org	3145737
   355   300009  C0                 	db	192
   356                           
   357                           ;Config register CONFIG6L @ 0x30000A
   358                           ;	Write Protection bit
   359                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   360                           ;	Write Protection bit
   361                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   362                           ;	Write Protection bit
   363                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   364                           ;	Write Protection bit
   365                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   366   30000A                     	org	3145738
   367   30000A  0F                 	db	15
   368                           
   369                           ;Config register CONFIG6H @ 0x30000B
   370                           ;	Configuration Register Write Protection bit
   371                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   372                           ;	Boot Block Write Protection bit
   373                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   374                           ;	Data EEPROM Write Protection bit
   375                           ;	WRTD = OFF, Data EEPROM is not write-protected
   376   30000B                     	org	3145739
   377   30000B  E0                 	db	224
   378                           
   379                           ;Config register CONFIG7L @ 0x30000C
   380                           ;	Table Read Protection bit
   381                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   382                           ;	Table Read Protection bit
   383                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   384                           ;	Table Read Protection bit
   385                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   386                           ;	Table Read Protection bit
   387                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   388   30000C                     	org	3145740
   389   30000C  0F                 	db	15
   390                           
   391                           ;Config register CONFIG7H @ 0x30000D
   392                           ;	Boot Block Table Read Protection bit
   393                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   394   30000D                     	org	3145741
   395   30000D  40                 	db	64
   396                           tosu	equ	0xFFF
   397                           tosh	equ	0xFFE
   398                           tosl	equ	0xFFD
   399                           stkptr	equ	0xFFC
   400                           pclatu	equ	0xFFB
   401                           pclath	equ	0xFFA
   402                           pcl	equ	0xFF9
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           prodh	equ	0xFF4
   408                           prodl	equ	0xFF3
   409                           indf0	equ	0xFEF
   410                           postinc0	equ	0xFEE
   411                           postdec0	equ	0xFED
   412                           preinc0	equ	0xFEC
   413                           plusw0	equ	0xFEB
   414                           fsr0h	equ	0xFEA
   415                           fsr0l	equ	0xFE9
   416                           wreg	equ	0xFE8
   417                           indf1	equ	0xFE7
   418                           postinc1	equ	0xFE6
   419                           postdec1	equ	0xFE5
   420                           preinc1	equ	0xFE4
   421                           plusw1	equ	0xFE3
   422                           fsr1h	equ	0xFE2
   423                           fsr1l	equ	0xFE1
   424                           bsr	equ	0xFE0
   425                           indf2	equ	0xFDF
   426                           postinc2	equ	0xFDE
   427                           postdec2	equ	0xFDD
   428                           preinc2	equ	0xFDC
   429                           plusw2	equ	0xFDB
   430                           fsr2h	equ	0xFDA
   431                           fsr2l	equ	0xFD9
   432                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      24       1       37.9%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2C      0       0      23        0.0%
BITBIGSFRlh         2A      0       0      21        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      24        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 01 08:42:41 2024

                     l21 7FC0                       l23 7FFC                       u10 7FB8  
                     u11 7FB4                       u20 7FFC                       u21 7FF8  
                     u37 7FCE                      l701 7F88                      l711 7FAA  
                    l703 7F8A                      l713 7FB8                      l715 7FC4  
                    l717 7FDC                      l709 7F94                      l699 7F80  
                    wreg 000FE8                     _LATD 000F8C                     _main 7F80  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 0021                    _TRISD 000F95                    main@i 0023  
                  tablat 000FF5                    status 000FD8          __initialization 7F5A  
           __end_of_main 8000                   ??_main 0021            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F7A            ___rparam_used 000001  
         __pcstackCOMRAM 0021                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F5A                  __ramtop 0800                  __ptext0 7F80  
   end_of_initialization 7F7A                  postdec1 000FE5                  postinc0 000FEE  
              _TRISEbits 000F96            __pidataCOMRAM 7F3A      start_initialization 7F5A  
               _LATEbits 000F8D                copy_data0 7F6E                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000            _display_array 0001  
